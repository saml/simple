user nginxworker;
worker_processes  1;
events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    root html;
    sendfile        on;
    keepalive_timeout  65;
    gzip  on;

    uwsgi_cache_path /home/nginxworker/nginx-cache levels=1:2 keys_zone=simplecache:10m inactive=7d max_size=1000m;
    #use these to recache
    uwsgi_cache_bypass $http_x_recache;
    uwsgi_cache_bypass $arg_recache;

    #these don't cache
    uwsgi_cache_bypass $http_pragma $http_authorization;
    uwsgi_cache_bypass $cookie_nocache;
    uwsgi_no_cache $http_pragma $http_authorization;
    uwsgi_no_cache $cookie_nocache;

    uwsgi_cache simplecache;
    uwsgi_cache_key $host$request_uri;
    uwsgi_cache_valid 365d;
    uwsgi_cache_valid 404 365d;
    uwsgi_cache_min_uses 1;
    uwsgi_cache_use_stale updating error timeout invalid_header http_500;

    ssl_certificate      server.crt;
    ssl_certificate_key  server.key;
    ssl_session_timeout  5m;

    server {
        listen       80;
        listen 443 default_server ssl;
        server_name  localhost;

        try_files /maintenance.html $uri @simple;

        location = / {
            uwsgi_cache_valid 1m;
            include uwsgi_params;
            uwsgi_pass unix:/home/nginxworker/code/simple/uwsgi.sock;
        }

        location = /posts.rss {
            uwsgi_cache_valid 1m;
            include uwsgi_params;
            uwsgi_pass unix:/home/nginxworker/code/simple/uwsgi.sock;
        }

        location @simple {
            include uwsgi_params;
            uwsgi_pass unix:/home/nginxworker/code/simple/uwsgi.sock;
        }
        error_page   500 502 503 504  /50x.html;
    }

}

